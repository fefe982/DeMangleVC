`string'[5]{24932327} "test\x00"
void (__cdecl * `public: static void (__cdecl * std::numpunct<char>::id$initializer$)(void)')(void)
class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl operator "" _w(char16_t const *,unsigned int)
public: int __thiscall A::fxunc(void)&
public: int __thiscall A::fxunc(void)const&
public: int __thiscall A::fxunc(void)volatile&
public: int __thiscall A::fxunc(void)const volatile&
public: int __thiscall A::fxunc(void)&&
public: int __thiscall A::fxunc(void)const&&
public: int __thiscall A::fxunc(void)volatile&&
public: int __thiscall A::fxunc(void)const volatile&&
struct boost::re_detail::digraph<wchar_t> * __cdecl std::_Move_backward_opt<struct boost::re_detail::digraph<wchar_t> *,struct boost::re_detail::digraph<wchar_t> *,struct std::random_access_iterator_tag,struct std::_Undefined_move_tag>(struct boost::re_detail::digraph<wchar_t> *,struct boost::re_detail::digraph<wchar_t> *,struct boost::re_detail::digraph<wchar_t> *,struct std::random_access_iterator_tag,struct std::_Undefined_move_tag,struct std::_Range_checked_iterator_tag)
public: int __thiscall boost::_bi::bind_t<int,class boost::_mfi::cmf7<int,class std::codecvt<wchar_t,char,int>,int &,wchar_t const *,wchar_t const *,wchar_t const * &,char *,char *,char * &>,class boost::_bi::list8<class boost::_bi::value<class std::codecvt<wchar_t,char,int> const *>,class boost::arg<1>,class boost::arg<2>,class boost::arg<3>,class boost::arg<4>,class boost::arg<5>,class boost::arg<6>,class boost::arg<7> > >::operator() <int,wchar_t const *,wchar_t const *,wchar_t const *,char [32],char *,char *>(int &,wchar_t const * &,wchar_t const * &,wchar_t const * &,char (&)[32],char * &,char * &)
class std::bad_alloc `RTTI Type Descriptor'
public: __thiscall CryptoPP::PK_FinalTemplate<class CryptoPP::TF_VerifierImpl<struct CryptoPP::TF_SignatureSchemeOptions<class CryptoPP::TF_SS<struct CryptoPP::PKCS1v15,class CryptoPP::SHA,struct CryptoPP::RSA,int>,struct CryptoPP::RSA,class CryptoPP::PKCS1v15_SignatureMessageEncodingMethod,class CryptoPP::SHA> > >::PK_FinalTemplate<class CryptoPP::TF_VerifierImpl<struct CryptoPP::TF_SignatureSchemeOptions<class CryptoPP::TF_SS<struct CryptoPP::PKCS1v15,class CryptoPP::SHA,struct CryptoPP::RSA,int>,struct CryptoPP::RSA,class CryptoPP::PKCS1v15_SignatureMessageEncodingMethod,class CryptoPP::SHA> > ><int,int>(int const &,int const &)
public: virtual long __thiscall CWnd::accNavigate(long,struct tagVARIANT,struct tagVARIANT *)
void __cdecl std::_Advance<unsigned int *,int>(unsigned int * &,int,struct std::random_access_iterator_tag)
int __stdcall ATL::lstrcmpiWFake(wchar_t const *,wchar_t const *)
private: __thiscall type_info::type_info(class type_info const &)
public: __thiscall CMultiDocTemplate::CMultiDocTemplate(unsigned int,struct CRuntimeClass *,struct CRuntimeClass *,struct CRuntimeClass *)
public: __thiscall ATL::CComCritSecLock<class ATL::CComCriticalSection>::CComCritSecLock<class ATL::CComCriticalSection>(class ATL::CComCriticalSection &,bool)
public: __thiscall CAboutDlg::CAboutDlg(void)
void __stdcall `eh vector destructor iterator'(void *,unsigned int,int,void (__thiscall *)(void *))
public: static void * __cdecl ATL::CSimpleArray<unsigned long,class ATL::CSimpleArrayEqualHelper<unsigned long> >::Wrapper::operator new<unsigned long>(unsigned int,unsigned long *)
long `int __stdcall AcceptConnectionCond(struct _WSABUF *,struct _WSABUF *,struct _QualityOfService *,struct _QualityOfService *,struct _WSABUF *,struct _WSABUF *,unsigned int *,unsigned long)'::`2'::__LINE__Var
const CryptoPP::AutoSignaling<class CryptoPP::InputRejecting<class CryptoPP::BufferedTransformation> >::`vftable'{for `CryptoPP::Algorithm'}
[thunk]:class PSSR_MEM<0,class CryptoPP::P1363_MGF1,-1,0,0>::P1363_MGF1 `private: virtual class PSSR_MEM<0,class CryptoPP::P1363_MGF1,-1,0,0>::MaskGeneratingFunction const & __thiscall CryptoPP::PSSR_MEM<0,class CryptoPP::P1363_MGF1,-1,0,0>::GetMGF(void)const'::`2'::mgf`local static destructor helper'
const std::bad_alloc::`RTTI Complete Object Locator'
const std::bad_alloc::`vftable'
[thunk]: __thiscall `vcall'{388,{flat}}' }'
public: static void (__cdecl * __ptr64 EST_String::Empty$initializer$)(void)
public: static char tagVARIANT::* const ATL::CVarTypeInfo<char>::pmField
const CryptoPP::AlgorithmImpl<class CryptoPP::TF_SignerBase,class CryptoPP::TF_SS<struct CryptoPP::PKCS1v15,class CryptoPP::SHA,struct CryptoPP::RSA,int> >::`vftable'{for `CryptoPP::PK_SignatureScheme'}
public: __thiscall std::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned long const,unsigned long> > > >,class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned long const,unsigned long> > > > >::pair<class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned long const,unsigned long> > > >,class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned long const,unsigned long> > > > ><class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned long const,unsigned long> > > >,class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned long const,unsigned long> > > >,void>(class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned long const,unsigned long> > > > &&,class std::_List_iterator<class std::_List_val<struct std::_List_simple_types<struct std::pair<unsigned long const,unsigned long> > > > &&)
const std::basic_fstream<char,struct std::char_traits<char> >::`vbtable'{for `std::basic_istream<char,struct std::char_traits<char> >'}
public: static int const std::numeric_limits<long double>::digits10
public: __thiscall std::function<void __cdecl(void)>::function<void __cdecl(void)><class <lambda_b017edad6ca290e88c4fa7f7ed50313f> >(class <lambda_b017edad6ca290e88c4fa7f7ed50313f> &&)
class AAA<> aa
class BBB<> bb
char (* `main'::`2'::c)[10]
char const (* const `main'::`2'::d)[10]
